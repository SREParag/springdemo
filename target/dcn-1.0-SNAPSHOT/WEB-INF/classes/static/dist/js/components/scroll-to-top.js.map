{"version":3,"sources":["js/dist/components/node_modules/browser-pack/_prelude.js","js/dist/components/js/dist/components/base.js","js/dist/components/js/dist/components/scroll-to-top.js","js/dist/components/js/dist/helpers/animation/request.js","js/dist/components/js/dist/helpers/animation/scroll-to.js","js/dist/components/js/dist/helpers/animation/tween.js","js/dist/components/js/dist/helpers/dom/add-class.js","js/dist/components/js/dist/helpers/dom/has-class.js","js/dist/components/js/dist/helpers/dom/offset.js","js/dist/components/js/dist/helpers/dom/remove-class.js","js/dist/components/js/dist/helpers/dom/toggle-class.js","js/dist/components/js/dist/helpers/util/debounce.js","js/dist/components/js/dist/helpers/util/each.js","js/dist/components/js/dist/helpers/util/trim.js"],"names":[],"mappingsxlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scroll-to-top.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _each = require('../helpers/util/each');\n\nvar _each2 = _interopRequireDefault(_each);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } /**\n                                                                                                                                                           * # Base Component\n                                                                                                                                                           * The base class for Spark JS components. This class should never be\n                                                                                                                                                           * instantiated directly.\n                                                                                                                                                           *\n                                                                                                                                                           * @param {Element} el\n                                                                                                                                                           * @param {Object} params\n                                                                                                                                                           *\n                                                                                                                                                           * @module components/base.js\n                                                                                                                                                           */\n\nvar noop = function noop() {};\n\nvar Base = function () {\n\n  /**\n   * Set parameters and cache elements.\n   */\n  function Base(el) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Base);\n\n    if (params.elRequired && !el) {\n      return;\n    }\n\n    this.setParams(this.defaults || {}, true);\n    this.setParams(params);\n    (this._cacheElements || noop).call(this, el, params);\n    (this._parseParams || noop).call(this);\n  }\n\n  /**\n   * Remove the component from the DOM and prepare for garbage collection by dereferencing values.\n   * @param {Boolean} leaveElement Leave the element intact.\n   */\n\n\n  Base.prototype.remove = function remove(leaveElement) {\n\n    if (this._removeEventListeners) {\n      this._removeEventListeners();\n    }\n\n    if (!leaveElement && this.el && this.el.parentNode) {\n      this.el.parentNode.removeChild(this.el);\n    }\n\n    this.unsetParams(this.defaults);\n\n    return this;\n  };\n\n  /**\n   * Update the component to use a new element or reparse from\n   * the existing element.\n   * @param {Element} el Optional\n   * @param {Object} params Optional\n   */\n\n\n  Base.prototype.update = function update(el) {\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    if (this._removeEventListeners) {\n      this._removeEventListeners();\n    }\n\n    (this._cacheElements || noop).call(this, el || this.el, params);\n    (this._parseParams || noop).call(this);\n\n    if (this._addEventListeners) {\n      this._addEventListeners();\n    }\n\n    return this;\n  };\n\n  /**\n   * Set a hash of parameters if they're whitelisted or we're told to force the set.\n   * This is used to set initial values as well as set passed parameters.\n   * @param {Object} params\n   * @param {Boolean} force Force setting even if the param is not whitelisted.\n   */\n\n\n  Base.prototype.setParams = function setParams(params, force) {\n    var _this = this;\n\n    (0, _each2.default)(params, function (k, v) {\n      if (_this._whitelistedParams.indexOf(k) !== -1 || force) {\n        _this[k] = v;\n      }\n    });\n\n    return this;\n  };\n\n  /**\n   * Unset all parameters.\n   * @param {Array|Object} keys\n   * @param {Object} scope The object to unset the params from. Defaults to `this`.\n   */\n\n\n  Base.prototype.unsetParams = function unsetParams(keys, scope) {\n\n    keys = keys instanceof Array ? keys : Object.keys(keys);\n    scope = scope || this;\n    (0, _each2.default)(keys, function (k) {\n      delete scope[k];\n    });\n\n    return this;\n  };\n\n  return Base;\n}();\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\n\n\nBase.prototype._whitelistedParams = [];\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nBase.prototype.defaults = {};\n\nexports.default = Base;\nmodule.exports = exports['default'];\n//# sourceMappingURL=base.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _base = require('./base');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _toggleClass = require('../helpers/dom/toggle-class');\n\nvar _toggleClass2 = _interopRequireDefault(_toggleClass);\n\nvar _scrollTo = require('../helpers/animation/scroll-to');\n\nvar _scrollTo2 = _interopRequireDefault(_scrollTo);\n\nvar _offset = require('../helpers/dom/offset');\n\nvar _offset2 = _interopRequireDefault(_offset);\n\nvar _debounce = require('../helpers/util/debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _each = require('../helpers/util/each');\n\nvar _each2 = _interopRequireDefault(_each);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\ncroll To Top\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Provide a way to scroll back to the top of a component.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @example\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * new ScrollToTop(el);\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module components/scroll-to-top.js\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\n\nvar noop = function noop() {};\nvar canObserve = typeof MutationObserver !== 'undefined' ? true : false;\n\nvar ScrollToTop = function (_BaseComponent) {\n  _inherits(ScrollToTop, _BaseComponent);\n\n  /**\n   * ScrollToTop constructor.\n   * @param {Element} el\n   * @param {Object} params\n   */\n  function ScrollToTop(el) {\n    var _this;\n\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ScrollToTop);\n\n    params.elRequired = true;\n\n    if (!(_this = _possibleConstructorReturn(this, _BaseComponent.call(this, el, params)), _this)) {\n      return _possibleConstructorReturn(_this);\n    }\n\n    _this._bindEventListenerCallbacks();\n    _this._addEventListeners();\n    _this._cacheSizes();\n\n    _this._clearRecomputeDebounced = (0, _debounce2.default)(_this._clearRecompute.bind(_this), 50);\n    _this._recomputeDebounced = (0, _debounce2.default)(_this._recompute.bind(_this), 50);\n\n    _this._checkScrollPosition();\n    return _possibleConstructorReturn(_this);\n  }\n\n  /**\n   * Scroll to the top of the containing element.\n   * @param {Function} callback\n   */\n\n\n  ScrollToTop.prototype.scrollToTop = function scrollToTop(callback) {\n    (0, _scrollTo2.default)(this.scrollToEl || 0, {\n      callback: callback || noop\n    });\n    return this;\n  };\n\n  /**\n   * Update the component to use a new element or reparse from\n   * the existing element.\n   * @param {Element} el Optional\n   */\n\n\n  ScrollToTop.prototype.update = function update(el) {\n\n    this._removeEventListeners();\n    this._cacheElements(el);\n    this._addEventListeners();\n    this._cacheSizes();\n    this._checkScrollPosition();\n\n    return this;\n  };\n\n  /**\n   * Store a reference to the element.\n   * @param {Element} el\n   */\n\n\n  ScrollToTop.prototype._cacheElements = function _cacheElements(el) {\n    this.el = el;\n    this.containerEl = this.containerEl || el.parentNode;\n  };\n\n  /**\n   * Cache element sizes.\n   */\n\n\n  ScrollToTop.prototype._cacheSizes = function _cacheSizes() {\n\n    var containerOffset = (0, _offset2.default)(this.containerEl);\n    var windowWidth = document.body.clientWidth;\n    var windowHeight = window.innerHeight;\n    var containerOffsetTop = containerOffset.top;\n    var containerOffsetLeft = containerOffset.left;\n    var containerOffsetRight = windowWidth - containerOffsetLeft - this.containerEl.offsetWidth;\n\n    this._windowHeight = windowHeight;\n    this._containerBottom = this.containerEl.offsetHeight + containerOffsetTop;\n    this._visibleThreshold = containerOffsetTop + windowHeight * 1.5;\n\n    // Reset button styles\n    var isAtBottom = this._isAtBottom;\n    this._isAtBottom = false;\n    this._right = 0;\n    this._updateBindings();\n\n    // Default right position of the element plus the right edge of the container\n    this._right = windowWidth - this.el.offsetLeft - this.el.offsetWidth + containerOffsetRight;\n    this._isAtBottom = isAtBottom;\n    this._updateBindings();\n  };\n\n  /**\n   * Check the scroll position. If we're far enough from the top,\n   * make visible. If the bottom of our container element is past the bottom\n   * of the screen, make us fixed.\n   */\n\n\n  ScrollToTop.prototype._checkScrollPosition = function _checkScrollPosition() {\n\n    var isVisible = this._isVisible;\n    var isAtBottom = this._isAtBottom;\n    var scrollTop = typeof window.scrollY !== 'undefined' ? window.scrollY : window.pageYOffset;\n    var bottomThreshold = scrollTop + this._windowHeight;\n\n    this._isVisible = scrollTop + this._windowHeight >= this._visibleThreshold ? true : false;\n    this._isAtBottom = this._containerBottom <= bottomThreshold ? true : false;\n\n    if (this._isAtBottom !== isAtBottom || this._isVisible !== isVisible) {\n      this._updateBindings();\n    }\n  };\n\n  /**\n   * Update bindings.\n   */\n\n\n  ScrollToTop.prototype._updateBindings = function _updateBindings() {\n    (0, _toggleClass2.default)(this.el, 'visible', this._isVisible);\n    (0, _toggleClass2.default)(this.el, 'at-bottom', this._isAtBottom);\n    this.el.style.right = this._isAtBottom || !this._right ? '' : this._right + 'px';\n  };\n\n  /**\n   * Create bound versions of event listener callbacks and store them.\n   * Otherwise we can't unbind from these events later because the\n   * function signatures won't match.\n   */\n\n\n  ScrollToTop.prototype._bindEventListenerCallbacks = function _bindEventListenerCallbacks() {\n    this._onClickBound = this._onClick.bind(this);\n    this._onScrollBound = this._onScroll.bind(this);\n    this._onResizeBound = this._onResize.bind(this);\n    this._onVisibleBound = this._onVisible.bind(this);\n    this._onMutateBound = this._onMutate.bind(this);\n  };\n\n  /**\n   * Add event listeners for DOM events.\n   */\n\n\n  ScrollToTop.prototype._addEventListeners = function _addEventListeners() {\n\n    this.el.addEventListener('click', this._onClickBound);\n    window.addEventListener('scroll', this._onScrollBound);\n    window.addEventListener('orientationchange', this._onScrollBound);\n    document.addEventListener('spark.visible-children', this._onVisibleBound, true);\n\n    if (canObserve) this._addMutationObserver();else window.addEventListener('resize', this._onResizeBound, false);\n  };\n\n  /**\n   * Remove event listeners for DOM events..\n   */\n\n\n  ScrollToTop.prototype._removeEventListeners = function _removeEventListeners() {\n\n    this.el.removeEventListener('click', this._onClickBound);\n    window.removeEventListener('scroll', this._onScrollBound);\n    window.removeEventListener('orientationchange', this._onScrollBound);\n    document.removeEventListener('spark.visible-children', this._onVisibleBound, true);\n\n    if (canObserve) this._removeMutationObserver();else window.removeEventListener('resize', this._onResizeBound);\n  };\n\n  /**\n   * Setup a mutation observer to know when the DOM has changed so we can recache.\n   */\n\n\n  ScrollToTop.prototype._addMutationObserver = function _addMutationObserver() {\n    this._observer = new MutationObserver(this._onMutateBound);\n    this._observer.observe(this.containerEl, { childList: true, attributes: true, characterData: true, subtree: true });\n  };\n\n  /**\n   * Remove a mutation observer.\n   */\n\n\n  ScrollToTop.prototype._removeMutationObserver = function _removeMutationObserver() {\n    if (this._observer) this._observer.disconnect();\n  };\n\n  /**\n   * Recompute the position.\n   */\n\n\n  ScrollToTop.prototype._recompute = function _recompute() {\n    this._cacheSizes();\n    this._checkScrollPosition();\n  };\n\n  /**\n   * Recompute styles, but only so often.\n   */\n\n\n  ScrollToTop.prototype._recomputeThrottled = function _recomputeThrottled() {\n\n    if (!this._recomputeRun) {\n      this._recompute();\n      this._recomputeRun = true;\n    }\n\n    this._clearRecomputeDebounced();\n  };\n\n  /**\n   * Clear the recompute run state.\n   */\n\n\n  ScrollToTop.prototype._clearRecompute = function _clearRecompute() {\n    this._recomputeRun = false;\n  };\n\n  /**\n   * When the window is scrolled, compute the position of the scroll-to-top.\n   * @param {Object} e\n   */\n\n\n  ScrollToTop.prototype._onScroll = function _onScroll() {\n    this._recomputeThrottled();\n    this._checkScrollPosition();\n  };\n\n  /**\n   * When the window is resized, re-cache element sizes.\n   * @param {Object} e\n   */\n\n\n  ScrollToTop.prototype._onResize = function _onResize() {\n    this._recomputeDebounced();\n  };\n\n  /**\n   * When the button is clicked, scroll to the top.\n   * @param {Object} e\n   */\n\n\n  ScrollToTop.prototype._onClick = function _onClick() {\n    this.scrollToTop();\n  };\n\n  /**\n   * When a parent container shows its children and our element\n   * is inside of it, resize\n   * @param  {Object} e\n   */\n\n\n  ScrollToTop.prototype._onVisible = function _onVisible(e) {\n    if (e.target.contains(this.el)) {\n      window.setTimeout(function () {\n        this._cacheSizes();\n        this._checkScrollPosition();\n      }.bind(this), 0);\n    }\n  };\n\n  /**\n   * When the DOM changes, recache our values because we might be in the wrong spot.\n   */\n\n\n  ScrollToTop.prototype._onMutate = function _onMutate(mutations) {\n    (0, _each2.default)(mutations, function (m) {\n      if (m.target !== this.el) this._recomputeDebounced();\n    }.bind(this));\n  };\n\n  return ScrollToTop;\n}(_base2.default);\n\n/**\n * Whitelisted parameters which can be set on construction.\n * @type {Array}\n */\n\n\nScrollToTop.prototype._whitelistedParams = ['containerEl', 'scrollToEl'];\n\n/**\n * Default values for internal properties we will be setting.\n * These are set on each construction so we don't leak properties\n * into the prototype chain.\n * @type {Object}\n */\nScrollToTop.prototype.defaults = {\n  el: null,\n  containerEl: null,\n  scrollToEl: null,\n  _isVisible: false,\n  _isAtBottom: false,\n  _containerBottom: 0,\n  _visibleThreshold: 0,\n  _windowHeight: 0,\n  _right: 0,\n  _recomputeRun: false,\n  _observer: null,\n  _onClickBound: null,\n  _onScrollBound: null,\n  _onVisibleBound: null,\n  _onResizeBound: null,\n  _onMutateBound: null\n};\n\nexports.default = ScrollToTop;\nmodule.exports = exports['default'];\n//# sourceMappingURL=scroll-to-top.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * # Request Animation\n * Request animation frame polyfill.\n * @module helpers/animation/request.js\n */\nvar request = window.requestAnimationFrame || window.msRequestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function () {\n\n  var fps = 60;\n  var del = 1000 / fps;\n  var start = Date.now();\n  var prev = start;\n\n  return function requestAnimationFrame(callback) {\n\n    var requestTime = Date.now();\n    var timeout = Math.max(0, del - (requestTime - prev));\n    var timeToCall = requestTime + timeout;\n\n    prev = timeToCall;\n\n    return window.setTimeout(function onAnimationFrame() {\n      callback(timeToCall - start);\n    }, timeout);\n  };\n}();\n\nexports.default = request;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=request.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _offset = require('../dom/offset');\n\nvar _offset2 = _interopRequireDefault(_offset);\n\nvar _tween = require('./tween');\n\nvar _tween2 = _interopRequireDefault(_tween);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * # Scroll To\n * Scroll the window to a specific element or position.\n * @param {Object} params\n *\n * @module helpers/animation/scroll-to.js\n */\n\nfunction scrollTo(params) {\n\n  params = params || {};\n\n  var offset = void 0;\n  var x = void 0;\n  var y = void 0;\n  var target = params.target || window;\n  var startX = target !== window ? target.scrollLeft : target.pageXOffset;\n  var startY = target !== window ? target.scrollTop : target.pageYOffset;\n\n  if (params instanceof HTMLElement) {\n    offset = (0, _offset2.default)(params);\n    x = offset.left;\n    y = offset.top;\n    params = arguments[1] || {};\n  } else {\n    x = params.x || 0;\n    y = params.y || 0;\n  }\n\n  (0, _tween2.default)({\n    target: target,\n    prop: 'scrollTo',\n    start: [startX, startY],\n    end: [x, y],\n    duration: params.duration,\n    callback: params.callback\n  });\n}\n\nexports.default = scrollTo;\nmodule.exports = exports['default'];\n//# sourceMappingURL=scroll-to.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _request = require('./request');\n\nvar _request2 = _interopRequireDefault(_request);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar noop = function noop() {};\n\n/**\n * Tween from one value to another.\n * @param {Object} params\n * @return {Long}\n */\n/**\n * # Tween\n * Tween between two values.\n * @module helpers/animation/tween.js\n */\n\nfunction tween(params) {\n\n  params = params || {};\n\n  var begin;\n  var obj = params.target;\n\n  if (!obj) {\n    throw new Error('Cannot tween without a target!');\n  }\n\n  var prop = typeof params.prop === 'string' ? [params.prop] : params.prop;\n  var start = typeof params.start === 'number' ? [params.start] : params.start;\n  var end = typeof params.end === 'number' ? [params.end] : params.end;\n  var duration = params.duration || 250;\n  var callback = params.callback || noop;\n\n  // Ensure we have the same number of start and end properties.\n  if (start.length !== end.length) {\n    throw new Error('Cannot tween two different sets of parameters!');\n  }\n\n  var f = function f(ts) {\n\n    // Keep track of when we start\n    if (!begin) begin = ts;\n\n    // Progress\n    var prog = ts - begin;\n\n    // Percentage complete\n    var per = Math.min(prog / duration, 1);\n\n    // Adjust the values for the percentage complete.\n    var args = [];\n    var i = 0;\n    var len = start.length;\n    for (; i < len; i++) {\n      args[i] = start[i] + (end[i] - start[i]) * per;\n    }\n\n    // Apply the values for each property.\n    i = 0;\n    len = prop.length;\n    var arg;\n    for (; i < len; i++) {\n\n      // If this is the last property but we have more arguments, set them all.\n      arg = i + 1 === len && args.length - 1 > i ? args.slice(i) : args[i];\n\n      if (typeof obj[prop[i]] === 'function') {\n        obj[prop[i]].apply(obj, arg);\n      } else {\n        obj[prop[i]] = arg;\n      }\n    }\n\n    // Keep going if we have more to do.\n    if (prog < duration) (0, _request2.default)(f);else callback();\n  };\n\n  return (0, _request2.default)(f);\n}\n\nexports.default = tween;\nmodule.exports = exports['default'];\n//# sourceMappingURL=tween.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _trim = require('../util/trim');\n\nvar _trim2 = _interopRequireDefault(_trim);\n\nvar _hasClass = require('./has-class');\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * # Add Class\n * Add a class on an element.\n *\n * @param {Element|Array} el An element or array of elements to update.\n * @param {String} name\n * @return {Element}\n *\n * @module helpers/dom/add-class.js\n */\n\nvar ws = /\\s+/;\nvar cleanup = /\\s{2,}/g;\n\nfunction addClass(el, name) {\n\n  if (arguments.length === 2 && typeof name === 'string') {\n    name = (0, _trim2.default)(name).split(ws);\n  } else {\n    name = name instanceof Array ? name : Array.prototype.slice.call(arguments, 1);\n  }\n\n  // optimize for best, most common case\n  if (name.length === 1 && el.classList) {\n    if (name[0]) {\n      el.classList.add(name[0]);\n    }\n    return el;\n  }\n\n  var toAdd = [];\n  var i = 0;\n  var l = name.length;\n  var item = void 0;\n  var clsName = typeof el.className === 'string' ? el.className : el.getAttribute ? el.getAttribute('class') : '';\n\n  // see if we have anything to add\n  for (; i < l; i++) {\n    item = name[i];\n    if (item && !(0, _hasClass2.default)(clsName, item)) {\n      toAdd.push(item);\n    }\n  }\n\n  if (toAdd.length) {\n    if (typeof el.className === 'string') {\n      el.className = (0, _trim2.default)((clsName + ' ' + toAdd.join(' ')).replace(cleanup, ' '));\n    } else if (el.setAttribute) {\n      el.setAttribute('class', (0, _trim2.default)((clsName + ' ' + toAdd.join(' ')).replace(cleanup, ' ')));\n    }\n  }\n\n  return el;\n}\n\nexports.default = addClass;\nmodule.exports = exports['default'];\n//# sourceMappingURL=add-class.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * # Has Class\n * See if an element has a class.\n *\n * @param {Element|String} el\n * @param {String} name\n * @return {Boolean}\n *\n * @module helpers/dom/has-class.js\n */\nfunction hasClass(el, name) {\n  var cName = ((typeof el === 'undefined' ? 'undefined' : _typeof(el)) === 'object' ? el.className || el.getAttribute && el.getAttribute('class') || '' : el || '').replace(/[\\t\\r\\n\\f]/g, ' ');\n  return (' ' + cName + ' ').indexOf(' ' + name + ' ') !== -1;\n}\n\nexports.default = hasClass;\nmodule.exports = exports['default'];\n//# sourceMappingURL=has-class.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * # Offset Position\n * Get the offset position of the element.\n *\n * @param {Element} el\n * @param {Boolean} viewPortOffset The offset relative to the viewport, not page.\n * @return {Object}\n *\n * @module helpers/dom/offset.js\n */\nfunction offset(el, viewPortOffset) {\n\n  var rect = {\n    top: 0,\n    left: 0\n  };\n\n  // Native implementation\n  if (el.getBoundingClientRect) {\n\n    var bounding = el.getBoundingClientRect();\n    rect.left = bounding.left;\n    rect.top = bounding.top;\n\n    if (!viewPortOffset) {\n      rect.left += typeof window.scrollX !== 'undefined' ? window.scrollX : window.pageXOffset;\n      rect.top += typeof window.scrollY !== 'undefined' ? window.scrollY : window.pageYOffset;\n    }\n  } else {\n    var x = 0,\n        y = 0;\n    do {\n      x += el.offsetLeft - (!viewPortOffset ? el.scrollLeft : 0);\n      y += el.offsetTop - (!viewPortOffset ? el.scrollTop : 0);\n    } while (el = el.offsetParent);\n\n    rect.left = x;\n    rect.top = y;\n  }\n\n  return rect;\n}\n\nexports.default = offset;\nmodule.exports = exports['default'];\n//# sourceMappingURL=offset.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _trim = require('../util/trim');\n\nvar _trim2 = _interopRequireDefault(_trim);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ws = /\\s+/; /**\n                 * # Remove Class\n                 * Remove a class on an element.\n                 *\n                 * @param {Element|Array} el An element or array of elements to update.\n                 * @param {String} name\n                 * @return {Element}\n                 *\n                 * @module helpers/dom/remove-class.js\n                 */\n\nvar cleanup = /\\s{2,}/g;\n\nfunction removeClass(el, name) {\n\n  if (arguments.length === 2 && typeof name === 'string') {\n    name = (0, _trim2.default)(name).split(ws);\n  } else {\n    name = name instanceof Array ? name : Array.prototype.slice.call(arguments, 1);\n  }\n\n  // optimize for best, most common case\n  if (name.length === 1 && el.classList) {\n    if (name[0]) el.classList.remove(name[0]);\n    return el;\n  }\n\n  // store two copies\n  var clsName = ' ' + (typeof el.className === 'string' ? el.className : el.getAttribute ? el.getAttribute('class') : '') + ' ';\n  var result = clsName;\n  var current = void 0;\n  var start = void 0;\n  for (var i = 0, l = name.length; i < l; i++) {\n    current = name[i];\n    start = current ? result.indexOf(' ' + current + ' ') : -1;\n    if (start !== -1) {\n      start += 1;\n      result = result.slice(0, start) + result.slice(start + current.length);\n    }\n  }\n\n  // only write if modified\n  if (clsName !== result) {\n    if (typeof el.className === 'string') {\n      el.className = (0, _trim2.default)(result.replace(cleanup, ' '));\n    } else if (el.setAttribute) {\n      el.setAttribute('class', (0, _trim2.default)(result.replace(cleanup, ' ')));\n    }\n  }\n\n  return el;\n}\n\nexports.default = removeClass;\nmodule.exports = exports['default'];\n//# sourceMappingURL=remove-class.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _hasClass = require('./has-class');\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nvar _addClass = require('./add-class');\n\nvar _addClass2 = _interopRequireDefault(_addClass);\n\nvar _removeClass = require('./remove-class');\n\nvar _removeClass2 = _interopRequireDefault(_removeClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toggleClass(el, name, enable) {\n\n  if (!el) {\n    return;\n  }\n\n  // If we're passed an array, toggle the class on each.\n  if (el instanceof NodeList || el instanceof Array) {\n\n    for (var i = 0, len = el.length; i < len; i++) {\n      toggleClass(el[i], name, enable);\n    }\n\n    return;\n  }\n\n  var action = void 0;\n  if (enable !== undefined) {\n    enable = typeof enable === 'function' ? enable.call(null, el) : enable;\n    action = enable ? 'add' : 'remove';\n  } else {\n    action = (0, _hasClass2.default)(el, name) ? 'remove' : 'add';\n  }\n\n  return (action === 'add' ? _addClass2.default : _removeClass2.default)(el, name);\n} /**\n   * # Toggle Class\n   * Toggle a class on an element given a condition.\n   *\n   * @param {Element|Array} el An element or array of elements to update.\n   * @param {String} name\n   * @param {Boolean} enable\n   * @return {Element}\n   *\n   * @module  helpers/dom/toggle-class.js\n   */\n\nexports.default = toggleClass;\nmodule.exports = exports['default'];\n//# sourceMappingURL=toggle-class.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * # Debounce\n * Debounce a function call\n *\n * @param {Function} func\n * @param {Integer} delay\n *\n * @module helpers/util/debounce.js\n */\nfunction debounce(func, delay) {\n\n  var timer = void 0;\n\n  return function () {\n    var args = arguments;\n    if (timer) window.clearTimeout(timer);\n    timer = window.setTimeout(function () {\n      func.apply(this, args);\n    }, delay);\n  };\n}\n\nexports.default = debounce;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=debounce.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * # Each\n * Apply a callback function to a list of any kind: Array, NodeList, HTMLCollection or Object.\n *\n * @param {Array|NodeList|HTMLCollection|Object} list\n * @param {Function} cb\n *\n * @example\n * each([], callback);\n * each(el.children, callback);\n * each(el.childNodes, callback);\n * each({}, callback);\n *\n * @module helpers/util/each.js\n */\nfunction each(list, cb) {\n\n  if (!list) {\n    return;\n  }\n\n  if (typeof cb !== 'function') {\n    throw new Error('Cannot invoke `each` without a callback!');\n  }\n\n  var i = 0;\n  var len = list.length;\n\n  // Object\n  if (len === undefined) {\n    for (i in list) {\n      if (i !== 'prototype' && list.hasOwnProperty(i)) {\n        cb(i, list[i]);\n      }\n    }\n  }\n  // Array-like\n  else {\n      for (; i < len; i++) {\n        cb(list[i]);\n      }\n    }\n}\n\nexports.default = each;\nmodule.exports = exports['default'];\n//# sourceMappingURL=each.js.map\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * # Trim\n * Trim whitespace on a string.\n *\n * @param {String} str\n *\n * @module helpers/util/trim.js\n */\n\nvar trimRE = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\nfunction trim(str) {\n  return str.replace(trimRE, '');\n}\n\nexports.default = trim;\nmodule.exports = exports['default'];\n//# sourceMappingURL=trim.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}